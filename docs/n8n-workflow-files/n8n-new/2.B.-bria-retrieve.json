{
  "name": "LHB - 2.B.- BG REMOVAL",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "bg-removal",
        "options": {}
      },
      "id": "b73373b9-4968-4a0e-a403-805e0419e182",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -6800,
        6272
      ],
      "webhookId": "4bfccdb7-ce6d-4961-85c1-5605f2a14128",
      "notes": "Receives submission data from Workflow A"
    },
    {
      "parameters": {
        "jsCode": "/**\n * Parse Submissions - Extract and validate webhook payload\n * UPDATED: Preserve full original payload as sourcePayload\n */\nconst input = $input.first().json;\n\n// Handle both direct submissions and webhook body structure\nconst sourcePayload = input.body || input || {};\nconst submissions = sourcePayload.submissions || [];\nconst orderData = sourcePayload.orderData || {};\n\nconsole.log('=== WORKFLOW 2B STARTED ===');\nconsole.log(`Processing ${submissions.length} submissions`);\nconsole.log(`Order: ${orderData.amazonOrderId || 'UNKNOWN'}`);\nconsole.log(`Character Hash: ${orderData.characterHash || 'UNKNOWN'}`);\n\nif (submissions.length === 0) {\n  throw new Error('No submissions received from Workflow 2A');\n}\nif (!orderData.characterHash) {\n  throw new Error('characterHash is required for file organization');\n}\n\n// Return each submission as separate item with orderData + sourcePayload preserved\nreturn submissions.map((s, idx) => ({\n  json: {\n    requestId: s.requestId || s.request_id,\n    statusUrl: s.statusUrl || s.status_url,\n    poseNumber: s.poseNumber || (idx + 1),\n    characterHash: s.characterHash || orderData.characterHash,\n    orderData,\n    sourcePayload,   // ← keep the full upstream body for later enrichment\n    retryCount: 0,\n    maxRetries: 5\n  }\n}));\n"
      },
      "id": "1185c359-15c0-444e-9177-d735653d80c0",
      "name": "Parse Submissions",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6592,
        6272
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.statusUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_token",
              "value": "eb0fed5156c441148c462a74d3f92f00"
            }
          ]
        },
        "options": {}
      },
      "id": "e7831e06-29bf-4130-9d5e-7b4421443c46",
      "name": "Check Bria Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6368,
        6160
      ]
    },
    {
      "parameters": {
        "jsCode": "/**\n * Parse Bria status responses (one output item per input item)\n * Works with merged items where Bria fields are top-level.\n * Preserves poseNumber and characterHash from your data.\n */\n\nconst inputs = $input.all();\n\nconst DONE = new Set(['COMPLETED', 'SUCCESS']);\nconst WORKING = new Set(['IN_PROGRESS', 'PROCESSING', 'PENDING']);\n\nconst now = new Date().toISOString();\n\nreturn inputs.map(item => {\n  const j = item.json ?? {};\n\n  // --- Read Bria status/URL from either top-level or nested result ---\n  const status =\n    j.status ?? j.state ?? j.result?.status ?? 'UNKNOWN';\n\n  const resultUrl =\n    j.result?.image_url ??\n    j.result_url ??\n    j.url ??\n    j.output_url ??\n    null;\n\n  // --- Request ID: prefer explicit fields, else parse from statusUrl ---\n  let requestId = j.requestId ?? j.request_id ?? j.id ?? null;\n  if (!requestId && typeof j.statusUrl === 'string') {\n    const m = j.statusUrl.match(/\\/status\\/([^/?#]+)/);\n    if (m) requestId = m[1];\n  }\n\n  // --- Retry bookkeeping from your item ---\n  const currentRetry = Number(j.retryCount ?? 0);\n  const maxRetries   = Number(j.maxRetries ?? 5);\n\n  const shouldDownload = DONE.has(status) && !!resultUrl;\n  const shouldRetry    = WORKING.has(status) && currentRetry < maxRetries;\n\n  // --- Preserve your poseNumber and characterHash ---\n  const poseNumber = j.poseNumber ?? j.currentPoseNumber ?? null;\n\n  // Keep original characterHash unless it is missing/\"nohash\"\n  let characterHash = j.characterHash ?? null;\n  if (!characterHash || characterHash === 'nohash') {\n    characterHash = j.orderData?.characterHash ?? characterHash;\n  }\n\n  return {\n    json: {\n      ...j,                  // keep everything you already had (orderData, etc.)\n      requestId,\n      briaStatus: status,\n      resultUrl,\n      shouldDownload,\n      shouldRetry,\n      retryCount: shouldRetry ? currentRetry + 1 : currentRetry,\n      maxRetries,\n      poseNumber,\n      characterHash,\n      statusCheckedAt: now,\n    },\n  };\n});\n"
      },
      "id": "2f9ce6cf-fcaa-4668-9de1-6b77ffd674ab",
      "name": "Parse Status Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5936,
        6160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ef899931-a2e4-4c6a-aad6-05fc301635b2",
              "leftValue": "={{ $json.shouldDownload ? 'download' : ($json.shouldRetry ? 'retry' : 'fail') }}",
              "rightValue": "download",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "id": "2577eb21-07cb-4328-bfc8-d5c85402b90c",
      "name": "Route By Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -5712,
        6160
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.resultUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "369312d1-c314-4b44-a4fe-0aee241a655b",
      "name": "Download Processed Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5488,
        6048
      ]
    },
    {
      "parameters": {
        "jsCode": "/**\n * Prepare for R2 Upload\n * UPDATED: Matches folder structure from Workflow 2A\n * Format: book-mvp-simple-adventure/order-generated-assets/characters/{hash}/characters_{hash}_pose{XX}_nobg.png\n */\nconst item = $input.first();\nconst poseNumber = item.json.poseNumber;\nconst orderData = item.json.orderData;\nconst characterHash = item.json.characterHash || orderData?.characterHash;\n\n// Get binary data\nconst binaryData = item.binary?.data;\n\nif (!binaryData) {\n  throw new Error(`No binary data received for pose ${poseNumber}`);\n}\n\nif (!characterHash) {\n  throw new Error(`Missing characterHash for pose ${poseNumber}`);\n}\n\nconsole.log(`[Pose ${poseNumber}] ✓ Downloaded image (${binaryData.fileSize || 'unknown'} bytes)`);\n\n// Build R2 path matching Workflow 2A structure\nconst paddedPose = poseNumber.toString().padStart(2, '0');\nconst fileName = `characters_${characterHash}_pose${paddedPose}_nobg.png`;\nconst r2Path = `book-mvp-simple-adventure/order-generated-assets/characters/${characterHash}/${fileName}`;\n\n// Build public URL\nconst publicUrl = `https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/${r2Path}`;\n\nconsole.log(`[Pose ${poseNumber}] Will upload to: ${r2Path}`);\n\nreturn [{\n  json: {\n    ...item.json,\n    fileName: fileName,\n    r2Path: r2Path,\n    publicUrl: publicUrl,\n    processedWithBria: true,\n    processingError: false,\n    downloadedAt: new Date().toISOString()\n  },\n  binary: {\n    data: binaryData\n  }\n}];"
      },
      "id": "39522f4c-7d93-4001-9208-a0497efb7c40",
      "name": "Prepare for R2 Upload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5264,
        6048
      ]
    },
    {
      "parameters": {
        "operation": "upload",
        "bucketName": "little-hero-assets",
        "fileName": "={{ $json.r2Path }}",
        "additionalFields": {}
      },
      "id": "b4aad433-0efa-43bd-844e-b80a62f70be0",
      "name": "Upload to R2",
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [
        -5040,
        6048
      ],
      "credentials": {
        "s3": {
          "id": "7tJOX9QjL1jqyEjf",
          "name": "S3 account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "/**\n * Clean up binary after upload\n * Store metadata for Workflow 3\n */\nconst item = $input.first().json;\nconst poseNumber = item.poseNumber;\n\nconsole.log(`[Pose ${poseNumber}] ✓ Uploaded to R2: ${item.r2Path}`);\n\nreturn [{\n  json: {\n    poseNumber,\n    characterHash: item.characterHash,\n    fileName: item.fileName,\n    r2Path: item.r2Path,\n    publicUrl: item.publicUrl,\n    briaProcessed: true,\n    briaStatus: item.briaStatus,\n    uploadComplete: true,\n    uploadedAt: new Date().toISOString(),\n    orderData: item.orderData,\n    sourcePayload: item.sourcePayload // ← keep it\n  }\n}];\n"
      },
      "id": "1938b7e5-8327-4ae5-a106-cb1b28bb15d3",
      "name": "Clean Binary After Upload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4816,
        6048
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "fa5b21ca-408f-49d0-b982-92d115dec2e3",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d3b9102d-e35f-4914-b143-6fdbc6c814a5",
      "name": "Check Retry Limit",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -5488,
        6448
      ]
    },
    {
      "parameters": {
        "jsCode": "// Calculate exponential backoff delay\nconst item = $input.first().json;\nconst retryCount = item.retryCount || 0;\n\n// Exponential backoff: 30s, 60s, 120s, 240s, 480s\nconst baseDelay = 30;\nconst delay = baseDelay * Math.pow(2, retryCount);\n\nconsole.log(`Retry ${retryCount + 1}: Waiting ${delay} seconds...`);\n\nreturn [{\n  json: {\n    ...item,\n    retryCount: retryCount + 1,\n    delaySeconds: delay\n  }\n}];"
      },
      "id": "4676b8d6-4a16-4f36-8241-ae6aee1ff63d",
      "name": "Calculate Retry Delay",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5280,
        6336
      ]
    },
    {
      "parameters": {
        "amount": "={{ $json.delaySeconds }}"
      },
      "id": "2f5a6919-bbf3-4293-b231-ea1a298a6dc5",
      "name": "Wait Before Retry",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -5088,
        6336
      ],
      "webhookId": "retry-wait-webhook"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://thepeakbeyond.app.n8n.cloud/webhook/bg-removal",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({ submissions: [$json], orderData: $json.orderData }) }}",
        "options": {}
      },
      "id": "8ca793fd-b446-46f1-9458-b11552e0ae48",
      "name": "Retry Workflow B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4912,
        6336
      ]
    },
    {
      "parameters": {
        "jsCode": "/**\n * Max retries exceeded - mark as failed\n */\nconst item = $input.first().json;\nconst poseNumber = item.poseNumber;\n\nconsole.error(`[Pose ${poseNumber}] ❌ Max retries (${item.maxRetries}) exceeded`);\n\nreturn [{\n  json: {\n    poseNumber: poseNumber,\n    characterHash: item.characterHash,\n    briaProcessed: false,\n    briaStatus: 'MAX_RETRIES_EXCEEDED',\n    processingError: true,\n    error: `Maximum retry attempts (${item.maxRetries}) exceeded`,\n    orderData: item.orderData\n  }\n}];"
      },
      "id": "864675db-92d3-416b-941d-5025ab6dc3c1",
      "name": "Max Retries Exceeded",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5152,
        6528
      ]
    },
    {
      "parameters": {},
      "id": "fbc61765-0d74-4210-8c08-be982773ff26",
      "name": "Merge All Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -4560,
        6512
      ]
    },
    {
      "parameters": {
        "jsCode": "/**\n * Generate final summary with complete order payload for Workflow 3\n * OUTPUT: a flat order object (NOT nested orderData wrapper)\n */\nconst items = $input.all();\n\n// Try to recover order data and full upstream payload\nconst any = items[0]?.json || {};\nconst orderData = any.orderData || {};\nconst sourcePayload = any.sourcePayload || {};\n\n// Collate processed images (good for debugging/traceability)\nconst processedImages = items.map(item => ({\n  poseNumber: item.json.poseNumber,\n  fileName: item.json.fileName,\n  r2Path: item.json.r2Path,\n  publicUrl: item.json.publicUrl,\n  briaProcessed: !!item.json.briaProcessed,\n  briaStatus: item.json.briaStatus || null,\n  processingError: !!item.json.processingError\n}));\n\nconst stats = {\n  total: items.length,\n  completed: processedImages.filter(i => i.briaProcessed).length,\n  failed: processedImages.filter(i => i.processingError).length\n};\n\n// Derive critical top-level fields for Workflow 3\nconst characterHash =\n  orderData.characterHash ||\n  items.find(i => i.json?.characterHash)?.json?.characterHash ||\n  null;\n\nconst amazonOrderId =\n  orderData.amazonOrderId ||\n  sourcePayload.amazonOrderId || // in case upstream sent it top-level\n  null;\n\nconst characterSpecs = orderData.characterSpecs || sourcePayload.characterSpecs || {};\nconst bookSpecs      = orderData.bookSpecs      || sourcePayload.bookSpecs      || {};\nconst orderDetails   = orderData.orderDetails   || sourcePayload.orderDetails   || {};\nconst publicR2Url    = sourcePayload.publicR2Url || 'https://pub-92cec53654f84771956bc84dfea65baa.r2.dev';\n\n// Basic validation (these are required by Workflow 3’s nodes)\nif (!characterHash) {\n  console.warn('⚠️ Missing characterHash in payload to Workflow 3');\n}\nif (!amazonOrderId) {\n  console.warn('⚠️ Missing amazonOrderId in payload to Workflow 3 (Load Background Images will throw)');\n}\nif (!characterSpecs?.childName) {\n  console.warn('⚠️ Missing characterSpecs.childName (Load Story Text will throw)');\n}\n\nconsole.log('\\n=== WORKFLOW 2B COMPLETE ===');\nconsole.log(`Total images processed: ${items.length}`);\nconsole.log(`✓ Bria processed: ${stats.completed}`);\nconsole.log(`❌ Failed: ${stats.failed}`);\nconsole.log('===========================\\n');\n\n// Build the FLAT order object for Workflow 3\nconst orderForWorkflow3 = {\n  // REQUIRED by WF3\n  status: 'ready_for_book_assembly',\n  amazonOrderId,\n  characterHash,\n  characterSpecs,\n  bookSpecs,\n  orderDetails,\n\n  // Helpful\n  publicR2Url,\n\n  // Optional: include for debugging/traceability\n  processedImages,\n  workflow2B: {\n    summary: stats,\n    completedAt: new Date().toISOString()\n  }\n};\n\nreturn [{ json: orderForWorkflow3 }];\n"
      },
      "id": "acf171c6-7c0d-4929-9dc3-01a1ab53298f",
      "name": "Generate Summary",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4368,
        6160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://thepeakbeyond.app.n8n.cloud/webhook/book-assembly",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json) }}",
        "options": {}
      },
      "id": "6bc9da5a-5c49-4bd4-8bd5-6ddfae8d85c1",
      "name": "Trigger Workflow 3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4144,
        6160
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { success: true, message: 'Workflow 2B completed', total: $json.workflowSummary.total, completed: $json.workflowSummary.completed, failed: $json.workflowSummary.failed } }}",
        "options": {}
      },
      "id": "28070541-9042-46f4-b8a8-759335273e24",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -3920,
        6160
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -6128,
        6256
      ],
      "id": "4363d14a-6fd2-4734-9f61-b8da8867e031",
      "name": "Merge"
    }
  ],
  "pinData": {
    "Webhook Trigger": [
      {
        "json": {
          "headers": {
            "host": "thepeakbeyond.app.n8n.cloud",
            "user-agent": "axios/1.8.3",
            "content-length": "9655",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "4.182.88.118",
            "cf-ew-via": "15",
            "cf-ipcountry": "DE",
            "cf-ray": "98e9dc82b42937c6-FRA",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "x-forwarded-for": "4.182.88.118, 162.158.95.101",
            "x-forwarded-host": "thepeakbeyond.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-3-6db8488cf7-vdndp",
            "x-is-trusted": "yes",
            "x-real-ip": "4.182.88.118"
          },
          "params": {},
          "query": {},
          "body": {
            "totalSubmissions": 12,
            "successful": 12,
            "failed": 0,
            "submittedAt": "2025-10-14T20:33:37.128Z",
            "submissions": [
              {
                "requestId": "436eba60cad84317aea0f2df3a1c5387",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/436eba60cad84317aea0f2df3a1c5387",
                "extractedImageData": null,
                "currentPoseNumber": 1,
                "poseNumber": 1,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/1.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/1.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/1.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:32:15.262Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "fab9b9f8a3f34ceda9a9f6e16df58fa1",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/fab9b9f8a3f34ceda9a9f6e16df58fa1",
                "extractedImageData": null,
                "currentPoseNumber": 2,
                "poseNumber": 2,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/2.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/2.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/2.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:32:22.052Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "fb7f7d73c07444d2a2a04de82e64b7b5",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/fb7f7d73c07444d2a2a04de82e64b7b5",
                "extractedImageData": null,
                "currentPoseNumber": 3,
                "poseNumber": 3,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/3.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/3.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/3.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:32:29.063Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "3698e5a0ff214c089803513b970342eb",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/3698e5a0ff214c089803513b970342eb",
                "extractedImageData": null,
                "currentPoseNumber": 4,
                "poseNumber": 4,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/4.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/4.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/4.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:32:35.831Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "95c80f162df24757a6a9f56432f45404",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/95c80f162df24757a6a9f56432f45404",
                "extractedImageData": null,
                "currentPoseNumber": 5,
                "poseNumber": 5,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/5.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/5.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/5.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:32:42.859Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "5e60ad3f9f74468e9f271b7408aa79b9",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/5e60ad3f9f74468e9f271b7408aa79b9",
                "extractedImageData": null,
                "currentPoseNumber": 6,
                "poseNumber": 6,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/6.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/6.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/6.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:32:50.108Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "b28d6d262aa84ac2bf08f524a2abe0c0",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/b28d6d262aa84ac2bf08f524a2abe0c0",
                "extractedImageData": null,
                "currentPoseNumber": 7,
                "poseNumber": 7,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/7.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/7.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/7.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:32:56.911Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "03cd07eeb13a4ca28344f2b8908336c1",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/03cd07eeb13a4ca28344f2b8908336c1",
                "extractedImageData": null,
                "currentPoseNumber": 8,
                "poseNumber": 8,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/8.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/8.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/8.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:33:04.008Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "3e544b99980a49a09565a06026e744d9",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/3e544b99980a49a09565a06026e744d9",
                "extractedImageData": null,
                "currentPoseNumber": 9,
                "poseNumber": 9,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/9.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/9.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/9.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:33:10.824Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "6d31285eaf0e43ef9f5f5eadb7037ed3",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/6d31285eaf0e43ef9f5f5eadb7037ed3",
                "extractedImageData": null,
                "currentPoseNumber": 10,
                "poseNumber": 10,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/10.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/10.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/10.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:33:17.579Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "78ab4bdfdd5a4ed0abf4407a2bab2fae",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/78ab4bdfdd5a4ed0abf4407a2bab2fae",
                "extractedImageData": null,
                "currentPoseNumber": 11,
                "poseNumber": 11,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/11.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/11.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/11.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:33:24.308Z",
                "briaSubmissionSuccess": true
              },
              {
                "requestId": "2e00390b40b14b8388ec562d2518d1fa",
                "statusUrl": "https://engine.prod.bria-api.com/v2/status/2e00390b40b14b8388ec562d2518d1fa",
                "extractedImageData": null,
                "currentPoseNumber": 12,
                "poseNumber": 12,
                "characterHash": "1dde0fac84943088",
                "characterPath": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/12.png",
                "imageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/12.png",
                "originalImageUrl": "https://pub-92cec53654f84771956bc84dfea65baa.r2.dev/book-mvp-simple-adventure/order-generated-assets/characters/1dde0fac84943088/12.png",
                "failed": false,
                "submittedAt": "2025-10-14T20:33:31.111Z",
                "briaSubmissionSuccess": true
              }
            ],
            "orderData": {
              "amazonOrderId": null,
              "characterHash": "1dde0fac84943088",
              "characterSpecs": {},
              "bookSpecs": {},
              "orderDetails": {},
              "r2BucketName": "little-hero-assets"
            },
            "workflow2AComplete": true
          },
          "webhookUrl": "https://thepeakbeyond.app.n8n.cloud/webhook/bg-removal",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Parse Submissions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Submissions": {
      "main": [
        [
          {
            "node": "Check Bria Status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Bria Status": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Status Response": {
      "main": [
        [
          {
            "node": "Route By Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route By Status": {
      "main": [
        [
          {
            "node": "Download Processed Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Retry Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Processed Image": {
      "main": [
        [
          {
            "node": "Prepare for R2 Upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare for R2 Upload": {
      "main": [
        [
          {
            "node": "Upload to R2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to R2": {
      "main": [
        [
          {
            "node": "Clean Binary After Upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Binary After Upload": {
      "main": [
        [
          {
            "node": "Merge All Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Retry Limit": {
      "main": [
        [
          {
            "node": "Calculate Retry Delay",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Max Retries Exceeded",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Retry Delay": {
      "main": [
        [
          {
            "node": "Wait Before Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait Before Retry": {
      "main": [
        [
          {
            "node": "Retry Workflow B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Max Retries Exceeded": {
      "main": [
        [
          {
            "node": "Merge All Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge All Results": {
      "main": [
        [
          {
            "node": "Generate Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Summary": {
      "main": [
        [
          {
            "node": "Trigger Workflow 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger Workflow 3": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Parse Status Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f9b9005b-b32c-48a3-87c5-e58e0ac0ea1b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "010748b7a1466c46dced3f8b2bdbc3bc174722f0672e5a4c9529354f5ff306f8"
  },
  "id": "HfOmpwcjC11KQN28",
  "tags": []
}