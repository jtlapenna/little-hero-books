{
  "name": "3-book-assembly",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Sample Order Data for Workflow 3 Testing\n// Copy this code into a Manual Trigger Code Node in n8n\n\nconst sampleOrder = {\n  amazonOrderId: 'TEST-ORDER-001',\n  characterHash: '6ec1cd52dce77992',\n  status: 'ready_for_book_assembly',\n  characterSpecs: {\n    childName: 'Alex',\n    hometown: 'Seattle',\n    skinTone: 'medium african-american',\n    hairColor: 'black',\n    hairStyle: 'pom pom',\n    age: 4,\n    pronouns: 'they/them',\n    favoriteColor: 'green',\n    animalGuide: 'unicorn',\n    clothingStyle: 't-shirt and shorts'\n  },\n  r2BaseUrl: 'https://little-hero-assets.r2.cloudflarestorage.com',\n  orderDetails: {\n    orderDate: '2024-01-15T10:00:00.000Z',\n    customerEmail: 'test@example.com',\n    quantity: 1,\n    shippingAddress: {\n      name: 'Test Customer',\n      address: '123 Test Street', \n      city: 'Test City',\n      state: 'CA',\n      zip: '90210'\n    }\n  },\n  workflowProgress: {\n    characterGeneration: 'completed',\n    bookAssembly: 'pending',\n    pdfGeneration: 'pending',\n    shipping: 'pending'\n  },\n  bookSpecs: {\n    title: 'Alex and the Adventure Compass',\n    totalPages: 14,\n    pageSize: '8.5x8.5',\n    dpi: 300,\n    format: '8.5x8.5_softcover',\n    bookType: 'animal-guide'\n  },\n  metadata: {\n    createdAt: '2024-01-15T10:00:00.000Z',\n    updatedAt: '2024-01-15T10:00:00.000Z',\n    version: '1.0',\n    testMode: true\n  }\n};\n\nconsole.log('Sample order data for Workflow 3 testing:', sampleOrder);\nreturn [{ json: sampleOrder }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2800, 4624],
      "id": "efdb6afa-e16a-40fd-b0b5-33ef8d6a97ef",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "// Get order ready for book assembly — robust, ALL items, never returns []\nconst items = $input.all();\n\nconst out = items.map(({ json }) => {\n  // Accept either a wrapped orderData object (Webhook) or the order object itself\n  let orderData = json.orderData && Object.keys(json.orderData).length ? { ...json.orderData } : { ...json };\n\n  // If this arrived from Workflow 2B summary, backfill readiness so we don't stall\n  const cameFrom2B = Boolean(json.workflow2BComplete) || Array.isArray(json.processedImages);\n  if (!orderData.status && cameFrom2B) {\n    orderData.status = 'ready_for_book_assembly';\n  }\n\n  // If still not ready, pass through with a clear reason (don't break the run)\n  if (orderData.status !== 'ready_for_book_assembly') {\n    console.log('Skipping book assembly for order — not ready:', orderData.amazonOrderId || '(no id)');\n    return { json: { ...orderData, skipped: true, skipReason: 'not-ready-for-book-assembly' } };\n  }\n\n  // Mark assembly start\n  const assemblingOrder = {\n    ...orderData,\n    status: 'book_assembly_in_progress',\n    assemblyStartedAt: new Date().toISOString(),\n    pagesGenerated: 0,\n    totalPagesRequired: 14,\n    assemblyProgress: 0\n  };\n\n  console.log('Starting book assembly for order:', assemblingOrder.amazonOrderId || '(no id)');\n  return { json: assemblingOrder };\n});\n\nreturn out;"
      },
      "id": "ff4564ec-3434-4cfe-aabd-4f8a91c12d14",
      "name": "Get Order Ready for Assembly",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [3104, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Load all generated character images for the order\nconst orderData = $input.first().json;\n\n// Use public R2 URL like Workflow 2\nconst publicR2Url = 'https://pub-92cec53654f84771956bc84dfea65baa.r2.dev';\nconst characterHash = orderData.characterHash;\n\nif (orderData.skipped) {\n  // Pass through if not ready\n  return [{ json: orderData }];\n}\n\n// Validate required fields\nif (!characterHash) {\n  throw new Error('Character hash is required for loading character images');\n}\n\n// Validate character hash format (should be 16 characters)\nif (!/^[a-f0-9]{16}$/.test(characterHash)) {\n  throw new Error('Invalid character hash format: ' + characterHash + '. Expected 16-character hex string.');\n}\n\nconst characterImages = {\n  base: `${publicR2Url}/book-mvp-simple-adventure/order-generated-assets/characters/${characterHash}/base-character.png`,\n  poses: []\n};\n\nfor (let i = 1; i <= 14; i++) {\n  const poseFilename = getPoseFilename(i);\n  if (poseFilename) {\n    const imagePath = `${publicR2Url}/book-mvp-simple-adventure/order-generated-assets/characters/${characterHash}/characters_${characterHash}_pose${i.toString().padStart(2,'0')}.png`;\n    characterImages.poses.push({\n      poseNumber: i,\n      poseFilename,\n      imagePath,\n      pageNumber: i,\n      validated: false\n    });\n  }\n}\n\nconst expectedPoses = 12; // Pages 1-12 have child poses\nconst actualPoses = characterImages.poses.length;\nif (actualPoses !== expectedPoses) {\n  console.warn(`Expected ${expectedPoses} poses, found ${actualPoses}. This may cause issues.`);\n}\n\nfunction getPoseFilename(pageNumber) {\n  const poseMap = { 1:'walking',2:'walking-looking-higher',3:'looking',4:'floating',5:'walking-looking-down',6:'jogging',7:'looking',8:'sitting-eating',9:'crouching',10:'crawling-moving-happy',11:'surprised-looking-up',12:'surprised',13:null,14:'flying' };\n  return poseMap[pageNumber];\n}\n\nconst orderWithCharacters = { ...orderData, characterImages, publicR2Url };\nconsole.log('Loaded', characterImages.poses.length, 'character poses for assembly from', publicR2Url);\nreturn [{ json: orderWithCharacters }];"
      },
      "id": "e65ccad3-2338-497f-9b22-e30e40a7b6de",
      "name": "Load Generated Characters",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [3328, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Load all background images for the Voice of Wonder story\nconst orderData = $input.first().json;\n\nconst publicR2Url = orderData.publicR2Url || 'https://pub-92cec53654f84771956bc84dfea65baa.r2.dev';\n\nif (orderData.skipped) {\n  return [{ json: orderData }];\n}\n\nif (!orderData.amazonOrderId) {\n  throw new Error('Amazon Order ID is required for loading background images');\n}\n\nconst backgroundImages = [];\nfor (let i = 1; i <= 14; i++) {\n  const sceneName = getSceneName(i);\n  const imagePath = `${publicR2Url}/book-mvp-simple-adventure/backgrounds/page${i.toString().padStart(2,'0')}-${getSceneSlug(i)}.png`;\n  backgroundImages.push({ pageNumber: i, imagePath, sceneName, validated: false });\n}\n\nconst expectedBackgrounds = 14;\nconst actualBackgrounds = backgroundImages.length;\nif (actualBackgrounds !== expectedBackgrounds) {\n  throw new Error(`Expected ${expectedBackgrounds} background images, found ${actualBackgrounds}`);\n}\n\nfunction getSceneSlug(p){ const sl=['twilight-walk','night-forest','magic-doorway','courage-leap','morning-meadow','tall-forest','mountain-vista','picnic-surprise','beach-discovery','crystal-cave','giant-flowers','almost-there','animal-reveal','flying-home']; return sl[p-1]||'unknown'; }\nfunction getSceneName(p){ const s=['twilight_walk','night_forest','magic_doorway','courage_leap','morning_meadow','tall_forest','mountain_vista','picnic_surprise','beach_discovery','crystal_cave','giant_flowers','enchanted_grove','animal_reveal','flying_home']; return s[p-1]||'unknown'; }\n\nconst orderWithBackgrounds = { ...orderData, backgroundImages };\nconsole.log('Loaded', backgroundImages.length, 'background images for assembly from', publicR2Url);\nreturn [{ json: orderWithBackgrounds }];"
      },
      "id": "571f99d4-bda1-4f02-9cc9-96fbc5abf1b7",
      "name": "Load Background Images",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [3552, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Load story text for all pages with character personalization\nconst orderData = $input.first().json;\n\nif (orderData.skipped) {\n  return [{ json: orderData }];\n}\n\nconst childName = orderData.characterSpecs?.childName;\nconst hometown = orderData.characterSpecs?.hometown || 'Seattle';\nif (!childName) throw new Error('Child name required');\n\nconst storyTexts = [];\nfor (let i = 1; i <= 14; i++) {\n  storyTexts.push({ pageNumber: i, text: getStoryText(i, childName, hometown), characterName: childName, hometown, validated: true });\n}\n\nfunction getStoryText(p, n, h){\n  const s=[\n    `It was a nice night in ${h}. ${n} went outside.`,\n    `${n} looked at the stars.<br>You like to explore, the voice said.`,\n    `There was a doorway! ${n} walked through.`,\n    `Stars were all around! ${n} felt brave.`,\n    `${n} noticed footprints and followed them.`,\n    `The path went through giant trees. ${n} felt small, but not scared.`,\n    `Look how far you came, the voice said.`,\n    `Lunch was waiting! ${n} ate happily.<br>You earned this, the voice said.`,\n    `The path became warm sand. Look down there, the voice said.<br>${n} found a beautiful shell!`,\n    `${n} found a cave with sparkly crystals! They glowed with rainbow colors. You can find beauty everywhere, the voice said.`,\n    `The path went through giant flowers. The petals were SO big!<br>You make others happy, the voice said.`,\n    `The voice felt very close now. You are perfect just as you are, it said.<br>${n} looked around. Where was the voice?`,\n    `Tiger appeared! It was the voice!<br>I have been with you this whole time, said Tiger.`,\n    `Ready to fly home? asked Tiger. They flew through the stars to ${h}.<br>I am always in your heart, said Tiger.`\n  ];\n  return s[p-1]||'Adventure awaits!';\n}\n\nreturn [{ json: { ...orderData, storyTexts } }];"
      },
      "id": "22fdaf1b-d065-41a1-a4f3-e9693b70aa64",
      "name": "Load Story Text",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [3776, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Initialize page generation loop for all 14 pages\nconst orderData = $input.first().json;\n\nif (orderData.skipped) {\n  return [{ json: orderData }];\n}\n\nconst pagesToGenerate = [];\nfor (let i = 1; i <= 14; i++) {\n  const characterImage = orderData.characterImages.poses.find(p => p.pageNumber === i);\n  const backgroundImage = orderData.backgroundImages.find(b => b.pageNumber === i);\n  const storyText = orderData.storyTexts.find(s => s.pageNumber === i);\n  pagesToGenerate.push({\n    ...orderData,\n    currentPageNumber: i,\n    pageStatus: 'pending',\n    pageGenerationAttempts: 0,\n    maxPageAttempts: 3,\n    characterImage,\n    backgroundImage,\n    storyText\n  });\n}\n\nconsole.log('Initialized page generation for', pagesToGenerate.length, 'pages');\nreturn pagesToGenerate.map(p => ({ json: p }));"
      },
      "id": "2e1443c4-e430-49be-a6db-8d256ca3e479",
      "name": "Initialize Page Generation Loop",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [4000, 5568]
    },
    {
      "parameters": {
        "jsCode": "// Generate complete multi-page HTML document for PDFMonkey\nconst orderData = $input.first().json;\n\nif (orderData.skipped) {\n  return [{ json: orderData }];\n}\n\nconsole.log('Order data keys:', Object.keys(orderData));\nconsole.log('Character images:', orderData.characterImages?.poses?.length || 'MISSING');\nconsole.log('Background images:', orderData.backgroundImages?.length || 'MISSING');\nconsole.log('Story texts:', orderData.storyTexts?.length || 'MISSING');\n\nconst publicR2Url = orderData.publicR2Url || 'https://pub-92cec53654f84771956bc84dfea65baa.r2.dev';\n\nlet pagesHTML = '';\nlet pageCSS = '';\n\nfor (let i = 1; i <= 14; i++) {\n  const pageData = {\n    pageNumber: i,\n    characterImage: orderData.characterImages.poses.find(p => p.pageNumber === i),\n    backgroundImage: orderData.backgroundImages.find(b => b.pageNumber === i),\n    storyText: orderData.storyTexts.find(s => s.pageNumber === i),\n    layout: getPageLayout(i),\n    lightingData: getLightingData(i),\n    poseFilename: getPoseFilename(i)\n  };\n  pageCSS += generatePageCSS(pageData);\n  pagesHTML += generatePageHTML(pageData, publicR2Url);\n}\n\nconst completeHTML = `<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\\\"UTF-8\\\">\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n  <title>Little Hero Book - ${orderData.characterSpecs.childName}'s Story</title>\n  <style>\n    @font-face { font-family: 'CustomFont'; src: url('${publicR2Url}/book-mvp-simple-adventure/fonts/custom-font.ttf') format('truetype'); }\n    @page { size: 2550px 2550px !important; margin: 0 !important; padding: 0 !important; }\n    * { margin: 0 !important; padding: 0 !important; box-sizing: border-box; }\n    html, body { width: 2550px !important; height: 2550px !important; margin: 0 !important; padding: 0 !important; overflow: hidden; }\n    body { font-family: 'CustomFont', 'Arial', sans-serif; position: relative; width: 2550px !important; height: 2550px !important; }\n    .book-page { width: 2550px !important; height: 2550px !important; position: relative; page-break-after: always !important; page-break-inside: avoid !important; background-size: 2550px 2550px !important; background-position: center !important; background-repeat: no-repeat !important; display: block !important; }\n    .book-page:last-child { page-break-after: avoid !important; }\n    .text-box { position: absolute; left: 50%; bottom: 3%; width: 80%; transform: translateX(-50%); height: auto; background-image: url('${publicR2Url}/book-mvp-simple-adventure/overlays/text-boxes/standard-box.png'); background-size: 100% 100%; background-repeat: no-repeat; background-position: center; padding: 120px 240px; display: flex; align-items: center; justify-content: center; min-height: 400px; }\n    .text-content { font-size: 60px !important; line-height: 1.3; letter-spacing: 2px; color: #312116; text-align: center; font-weight: 400; width: 100%; word-wrap: break-word; hyphens: none; }\n    .character { position: absolute !important; z-index: 100 !important; border: 3px solid red !important; background: rgba(255,0,0,0.2) !important; min-width: 50px !important; min-height: 50px !important; }\n    .character img { width: 100% !important; height: auto !important; mix-blend-mode: multiply; filter: contrast(1.1) brightness(0.95); opacity: 0.9; border: 2px solid blue !important; }\n    .animal-guide { position: absolute; z-index: 90; }\n    .animal-guide img { width: 100%; height: auto; }\n    .debug-info { position: absolute; top: 30px; left: 30px; background: rgba(255,255,255,0.9); padding: 45px; border-radius: 24px; font-size: 36px; font-family: monospace; max-width: 900px; z-index: 1000; }\n    .debug-info h4 { margin-bottom: 24px; color: #333; }\n    .debug-info ul { margin-left: 45px; }\n    .debug-info li { margin-bottom: 9px; }\n    @media print { .debug-info { display: none; } }\n    ${pageCSS}\n  </style>\n</head>\n<body>\n  ${pagesHTML}\n</body>\n</html>`;\n\nconst result = { ...orderData, completeHTML, totalPages: 14, generatedAt: new Date().toISOString() };\n\nconsole.log('Generated complete multi-page HTML document with 14 pages at 8.5x8.5 inches (2550x2550px)');\nconsole.log('HTML length:', completeHTML.length);\nconsole.log('Number of .book-page divs:', (completeHTML.match(/\\\\.book-page/g) || []).length);\nconsole.log('First 500 chars of HTML:', completeHTML.substring(0, 500));\nreturn [{ json: result }];\n\nfunction generatePageCSS(pageData){\n  return `#page-${pageData.pageNumber}{background-image:url('${pageData.backgroundImage.imagePath}')!important;background-size:2550px 2550px!important;background-position:center!important;background-repeat:no-repeat!important}#page-${pageData.pageNumber} .character{${pageData.layout.character.position}!important;width:${pageData.layout.character.width}px!important;border:3px solid red!important;background:rgba(255,0,0,.2)!important;min-width:50px!important;min-height:50px!important}`;\n}\nfunction generatePageHTML(pageData, publicR2Url){\n  return `\n  <div class=\\\"book-page\\\" id=\\\"page-${pageData.pageNumber}\\\" style=\\\"width:2550px!important;height:2550px!important;background-size:2550px 2550px!important;background-position:center!important;background-repeat:no-repeat!important;page-break-after:always!important;\\\">\n    <div class=\\\"debug-info\\\">\n      <h4>🎨 Page ${pageData.pageNumber}</h4>\n      <ul>\n        <li>Background: ${pageData.backgroundImage.sceneName}</li>\n        <li>Character: ${pageData.layout.character.position}</li>\n        <li>Size: 8.5in × 8.5in (2550px × 2550px @ 300 DPI)</li>\n        <li>Character Image: ${pageData.characterImage ? 'FOUND' : 'MISSING'}</li>\n        <li>Pose Filename: ${pageData.poseFilename || 'NONE'}</li>\n        <li>Character Width: ${pageData.layout.character.width}px</li>\n      </ul>\n    </div>\n    <div class=\\\"text-box\\\"><div class=\\\"text-content\\\">${pageData.storyText.text}</div></div>\n    ${pageData.poseFilename ? `<div class=\\\"character\\\" style=\\\"${pageData.layout.character.position}!important;width:${pageData.layout.character.width}px!important;\\\"><img src=\\\"${pageData.characterImage.imagePath}\\\" alt=\\\"Character\\\"></div>` : ''}\n    ${pageData.pageNumber===13 ? `<div class=\\\"animal-guide\\\" style=\\\"position:absolute;right:-30%;top:-5%;width:1950px;height:auto;z-index:90;\\\"><img src=\\\"${publicR2Url}/animals/tiger-appears.png\\\" alt=\\\"Animal Guide\\\"></div>` : ''}\n    ${pageData.pageNumber===14 ? `<div class=\\\"animal-guide\\\" style=\\\"position:absolute;right:3%;top:8%;width:1650px;height:auto;z-index:90;\\\"><img src=\\\"${publicR2Url}/animals/tiger-flying.png\\\" alt=\\\"Animal Flying\\\"></div>` : ''}\n  </div>`;\n}\nfunction getPageLayout(p){\n  const L={\n    1:{character:{position:'right:-36%; top:7%; transform:scaleX(1);',width:350}},\n    2:{character:{position:'right:-35%; top:18%; transform:scaleX(-1);',width:300}},\n    3:{character:{position:'right:-19%; top:15%; transform:scaleX(-1);',width:350}},\n    4:{character:{position:'right:-30%; top:-2%; transform:scaleX(1) rotateZ(-15deg);',width:390}},\n    5:{character:{position:'right:-31%; top:14%; transform:scaleX(-1);',width:300}},\n    6:{character:{position:'right:-32%; top:13%; transform:scaleX(1);',width:300}},\n    7:{character:{position:'right:-26%; top:-4%; transform:scaleX(-1);',width:350}},\n    8:{character:{position:'right:-30%; top:0%; transform:scaleX(1);',width:490}},\n    9:{character:{position:'right:-25%; top:8%; transform:scaleX(-1);',width:400}},\n    10:{character:{position:'right:-18%; top:13%; transform:scaleX(-1);',width:500}},\n    11:{character:{position:'right:-57%; top:24.5%; transform:scaleX(1);',width:200}},\n    12:{character:{position:'right:-14%; top:15%; transform:scaleX(-1);',width:350}},\n    13:{character:{position:'right:-25%; top:5%; transform:scaleX(1);',width:390}},\n    14:{character:{position:'right:-5%; top:-5%; transform:scaleX(1);',width:450}}\n  }; return L[p]||L[1];\n}\nfunction getLightingData(p){ const M={1:{},2:{},3:{},4:{},5:{},6:{},7:{},8:{},9:{},10:{},11:{},12:{},13:{},14:{}}; return M[p]||{}; }\nfunction getPoseFilename(p){ const m={1:'walking',2:'walking-looking-higher',3:'looking',4:'floating',5:'walking-looking-down',6:'jogging',7:'looking',8:'sitting-eating',9:'crouching',10:'crawling-moving-happy',11:'surprised-looking-up',12:'surprised',13:null,14:'flying'}; return m[p];"
      },
      "id": "13971daa-4574-4c7b-b92c-868fd5f8644d",
      "name": "Generate Complete HTML",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [4208, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Prepare data for PDFMonkey with complete multi-page HTML\nconst orderData = $input.first().json;\n\nif (orderData.skipped) {\n  return [{ json: orderData }];\n}\n\nconst pdfMonkeyData = {\n  ...orderData,\n  pdfMonkeyTemplateId: 'YOUR_PDFMONKEY_TEMPLATE_ID', // TODO: replace\n  pdfFilename: `complete_book_${orderData.amazonOrderId}.pdf`,\n  templateData: { html_content: orderData.completeHTML }\n};\n\nconsole.log('Prepared PDFMonkey data for complete book with', orderData.totalPages, 'pages');\nreturn [{ json: pdfMonkeyData }];"
      },
      "id": "0be86da7-7691-4bb7-8fc3-a452ebac0447",
      "name": "Prepare PDFMonkey Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [4432, 5136]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdfmonkey.io/api/v1/documents",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" },
            { "name": "Authorization", "value": "Bearer 2zpxHdmsse2ECXgVVtVR" }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ { \\\"document\\\": { \\\"document_template_id\\\": \\\"5539ddb4-ec78-4ae9-a3fb-db1e7f8dd172\\\", \\\"status\\\": \\\"pending\\\", \\\"meta\\\": { \\\"_filename\\\": $json.pdfFilename }, \\\"payload\\\": { \\\"html_content\\\": $json.templateData.html_content } } } }}",
        "options": { "timeout": 30000 }
      },
      "id": "de62c402-d898-458c-b83d-437e1c65a463",
      "name": "Generate PDF with PDFMonkey",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [4656, 5136]
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {
          "response": { "response": { "responseFormat": "file" } },
          "timeout": 30000
        }
      },
      "id": "bd352eda-ea1c-4846-98b2-1dea13c6d1b3",
      "name": "Download PDF from PDFMonkey",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [4880, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Update page generation progress\nconst pageData = $input.first().json;\n\nif (pageData.skipped) {\n  return [{ json: pageData }];\n}\n\nconst orderData = $('Get Order Ready for Assembly').first().json;\n\nconst pagesGenerated = (orderData.pagesGenerated || 0) + 1;\nconst totalPages = orderData.totalPagesRequired || 14;\nconst progress = Math.round((pagesGenerated / totalPages) * 100);\n\nconst updatedOrder = {\n  ...orderData,\n  pagesGenerated,\n  assemblyProgress: progress,\n  lastPageGenerated: pageData.currentPageNumber,\n  lastPageGeneratedAt: new Date().toISOString()\n};\n\nif (pagesGenerated >= totalPages) {\n  updatedOrder.status = 'pages_generated';\n  updatedOrder.pagesGeneratedAt = new Date().toISOString();\n  console.log('All pages generated for order:', orderData.amazonOrderId);\n} else {\n  console.log(`Page ${pageData.currentPageNumber} generated. Progress: ${progress}%`);\n}\n\nreturn [{ json: updatedOrder }];"
      },
      "id": "9e1e1dee-3d8b-4fed-8595-677bd16736ea",
      "name": "Update Page Progress",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [5120, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Check if all pages have been generated successfully\nconst orderData = $input.first().json;\n\nif (orderData.skipped) {\n  return [{ json: orderData }];\n}\n\nif (orderData.status === 'pages_generated') {\n  const readyForCompilation = { ...orderData, status: 'ready_for_compilation', readyForCompilationAt: new Date().toISOString() };\n  console.log('Order', orderData.amazonOrderId, 'ready for PDF compilation');\n  return [{ json: readyForCompilation }];\n}\n\nconsole.log('Order', orderData.amazonOrderId, 'still processing:', orderData.assemblyProgress + '% complete');\nreturn [{ json: orderData }];"
      },
      "id": "eb7f7a1f-3ac9-48ed-bdb0-3ffbd13195f5",
      "name": "Check All Pages Complete",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [5344, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Compile all individual page PDFs into final book (placeholder)\nconst orderData = $input.first().json;\n\nif (orderData.skipped) {\n  return [{ json: orderData }];\n}\n\nconst compilationResult = {\n  ...orderData,\n  compilationStartedAt: new Date().toISOString(),\n  compilationCompletedAt: new Date().toISOString(),\n  compilationLog: ['PDF compilation prepared - individual pages available for manual merging'],\n  totalPagesInFinalBook: 14,\n  status: 'final_book_compiled',\n  individualPageUrls: []\n};\n\nconst publicR2Url = orderData.publicR2Url || 'https://pub-92cec53654f84771956bc84dfea65baa.r2.dev';\nfor (let i = 1; i <= 14; i++) {\n  const pageUrl = `${publicR2Url}/little-hero-orders/${orderData.amazonOrderId}/page${i}.pdf`;\n  compilationResult.individualPageUrls.push({ pageNumber: i, url: pageUrl });\n}\n\nconsole.log('PDF compilation prepared for order:', orderData.amazonOrderId);\nconsole.log('Individual pages available at:', `${publicR2Url}/little-hero-orders/${orderData.amazonOrderId}/`);\n\nreturn [{ json: compilationResult }];"
      },
      "id": "de1a2057-9091-4e17-98b3-12c9e602dc2a",
      "name": "Compile Final Book PDF",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [5568, 5136]
    },
    {
      "parameters": {
        "operation": "upload",
        "bucketName": "little-hero-orders",
        "fileName": "={{ $json.amazonOrderId }}/final_book.pdf",
        "additionalFields": {}
      },
      "id": "69199692-d4dc-49ab-801e-3465342cdb11",
      "name": "Upload Final Book to Storage",
      "type": "n8n-nodes-base.s3",
      "typeVersion": 1,
      "position": [5792, 5136],
      "credentials": { "s3": { "id": "7tJOX9QjL1jqyEjf", "name": "S3 account" } }
    },
    {
      "parameters": {
        "jsCode": "// Update order status to completed\nconst orderData = $input.first().json;\n\nif (orderData.skipped) {\n  return [{ json: orderData }];\n}\n\nconst publicR2Url = orderData.publicR2Url || 'https://pub-92cec53654f84771956bc84dfea65baa.r2.dev';\nconst nowIso = new Date().toISOString();\n\nconst completedOrder = {\n  ...orderData,\n  status: 'book_assembly_completed',\n  bookAssemblyCompletedAt: nowIso,\n  finalBookUrl: `${publicR2Url}/little-hero-orders/${orderData.amazonOrderId}/final_book.pdf`,\n  totalAssemblyTime: orderData.assemblyStartedAt ? (new Date(nowIso) - new Date(orderData.assemblyStartedAt)) : null,\n  averageTimePerPage: orderData.assemblyStartedAt ? Math.round((new Date(nowIso) - new Date(orderData.assemblyStartedAt)) / (orderData.totalPagesRequired || 14) / 1000) : null\n};\n\nconsole.log('Book assembly completed for order:', orderData.amazonOrderId);\nreturn [{ json: completedOrder }];"
      },
      "id": "bc42a344-2d5a-45a6-9167-0c2d50cb1ec3",
      "name": "Update Order Status Complete",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [6000, 5136]
    },
    {
      "parameters": {
        "jsCode": "// Log assembly results for monitoring\nconst orderData = $input.first().json;\n\nconst logEntry = {\n  timestamp: new Date().toISOString(),\n  workflow: '3-book-assembly-voice-of-wonder',\n  orderId: orderData.amazonOrderId,\n  status: orderData.status,\n  pagesGenerated: orderData.pagesGenerated,\n  totalPagesRequired: orderData.totalPagesRequired,\n  assemblyProgress: orderData.assemblyProgress,\n  currentPageNumber: orderData.currentPageNumber,\n  pageStatus: orderData.pageStatus,\n  assemblyTime: orderData.totalAssemblyTime || 'N/A',\n  averageTimePerPage: orderData.averageTimePerPage || 'N/A',\n  finalBookUrl: orderData.finalBookUrl || 'N/A'\n};\n\nconsole.log('Book Assembly Results:', JSON.stringify(logEntry, null, 2));\nreturn [{ json: logEntry }];"
      },
      "id": "849dad72-dba6-4cbf-95b2-c2f551158af0",
      "name": "Log Assembly Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [6224, 5136]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [2592, 4624],
      "id": "19793d88-3252-44af-a140-3bc307e26ba3",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "path": "book-assembly",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [2896, 5136],
      "id": "0ed08c35-e17e-4438-8bd2-028e837d715b",
      "name": "Webhook",
      "webhookId": "7dd0e018-54d4-42d7-a682-cbc285f1915c"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "thepeakbeyond.app.n8n.cloud",
            "user-agent": "axios/1.8.3",
            "content-length": "1157",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "4.182.88.118",
            "cf-ew-via": "15",
            "cf-ipcountry": "DE",
            "cf-ray": "98e7ef28a6e8d274-FRA",
            "cf-visitor": "{\\"scheme\\":\\"https\\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "x-forwarded-for": "4.182.88.118, 172.71.164.47",
            "x-forwarded-host": "thepeakbeyond.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-3-6db8488cf7-g62vb",
            "x-is-trusted": "yes",
            "x-real-ip": "4.182.88.118"
          },
          "params": {},
          "query": {},
          "body": {
            "orderData": {},
            "processedImages": [
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false },
              { "fileUrl": "https://r2.yourdomain.com/", "briaProcessed": true, "fallbackUsed": false }
            ],
            "totalProcessed": 12,
            "successfulBria": 12,
            "fallbacksUsed": 0,
            "completedAt": "2025-10-14T14:58:19.578Z",
            "workflow2BComplete": true
          },
          "webhookUrl": "https://thepeakbeyond.app.n8n.cloud/webhook/book-assembly",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Code": { "main": [ [] ] },
    "Get Order Ready for Assembly": { "main": [ [ { "node": "Load Generated Characters", "type": "main", "index": 0 } ] ] },
    "Load Generated Characters": { "main": [ [ { "node": "Load Background Images", "type": "main", "index": 0 } ] ] },
    "Load Background Images": { "main": [ [ { "node": "Load Story Text", "type": "main", "index": 0 } ] ] },
    "Load Story Text": { "main": [ [ { "node": "Generate Complete HTML", "type": "main", "index": 0 } ] ] },
    "Generate Complete HTML": { "main": [ [ { "node": "Prepare PDFMonkey Data", "type": "main", "index": 0 } ] ] },
    "Prepare PDFMonkey Data": { "main": [ [ { "node": "Generate PDF with PDFMonkey", "type": "main", "index": 0 } ] ] },
    "Generate PDF with PDFMonkey": { "main": [ [ { "node": "Download PDF from PDFMonkey", "type": "main", "index": 0 } ] ] },
    "Download PDF from PDFMonkey": { "main": [ [ { "node": "Compile Final Book PDF", "type": "main", "index": 0 } ] ] },
    "Compile Final Book PDF": { "main": [ [ { "node": "Upload Final Book to Storage", "type": "main", "index": 0 } ] ] },
    "Upload Final Book to Storage": { "main": [ [ { "node": "Update Order Status Complete", "type": "main", "index": 0 } ] ] },
    "Update Order Status Complete": { "main": [ [ { "node": "Log Assembly Results", "type": "main", "index": 0 } ] ] },
    "When clicking ‘Execute workflow’": { "main": [ [ { "node": "Code", "type": "main", "index": 0 } ] ] },
    "Webhook": { "main": [ [ { "node": "Get Order Ready for Assembly", "type": "main", "index": 0 } ] ] }
  },
  "active": true,
  "settings": { "executionOrder": "v1" },
  "versionId": "4b9be34e-c30b-4468-81f1-f38ab153680e",
  "meta": { "instanceId": "010748b7a1466c46dced3f8b2bdbc3bc174722f0672e5a4c9529354f5ff306f8" },
  "id": "BsL7VPylfeo8EQ4M",
  "tags": []
}